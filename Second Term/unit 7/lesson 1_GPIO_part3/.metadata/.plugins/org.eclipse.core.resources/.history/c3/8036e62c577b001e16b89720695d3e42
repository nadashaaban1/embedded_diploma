/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include "STM32F103x6.h"
#include "STM32_F103_C6_GPIO.h"

void clock_init()
{
	//enable GPIOA clock
	RCC_GPIOA_CLK_EN();
	//enable GPIOB clock
	RCC_GPIOB_CLK_EN();
}

void GPIO_init()
{
	GPIO_PinConfig_t PinCfg;

	//PA1 input high Z floating input
	PinCfg.GPIO_PinNumber = GPIO_PIN_1;
	PinCfg.GPIO_MODE = GPIO_MODE_INPUT_FLO;
	MCAL_GPIO_Init(GPIOA, &PinCfg);

	//PB1 output push pull
	PinCfg.GPIO_PinNumber = GPIO_PIN_1;
	PinCfg.GPIO_MODE = GPIO_MODE_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_SPEED_10M;
	MCAL_GPIO_Init(GPIOB, &PinCfg);

	//PA13 input high Z floating input
	PinCfg.GPIO_PinNumber = GPIO_PIN_13;
	PinCfg.GPIO_MODE = GPIO_MODE_INPUT_FLO;
	MCAL_GPIO_Init(GPIOA, &PinCfg);

	//PB13 output push pull
	PinCfg.GPIO_PinNumber = GPIO_PIN_13;
	PinCfg.GPIO_MODE = GPIO_MODE_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_SPEED_10M;
	MCAL_GPIO_Init(GPIOB, &PinCfg);
}

void my_wait(int x)
{
	unsigned int i;
	for(i=0;i<x;i++);
}

int main(void)
{
	clock_init();
	GPIO_init();


	while(1)
	{
		//PORTA1 (pull up)
		if(MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == 0) //single press
		{
			MCAL_GPIO_TogglePin(GPIOA, GPIO_PIN_1);
			while(MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == 0);
		}

		//PORTA13 (pull down)
		if(MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_13) == 1) //multi press
		{
			MCAL_GPIO_TogglePin(GPIOB, GPIO_PIN_13);

		}

		my_wait(500);
	}
	return 0;
}
